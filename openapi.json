{
  "openapi": "3.0.4",
  "info": {
    "title": "VertexBPMN.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
    "version": "1.0"
  },
  "paths": {
    "/api/Analytics/predict-duration": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "summary": "Returns a simple prediction for process duration based on historical traces (stub/demo).",
        "description": "Example request:\r\n            \r\n    POST /api/analytics/predict-duration\r\n    {\r\n        \"traceLengths\": [5, 7, 6, 8, 7]\r\n    }",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictDurationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictDurationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PredictDurationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/authorization": {
      "get": {
        "tags": [
          "CamundaAuthorization"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorizationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorizationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuthorizationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/decision-definition": {
      "get": {
        "tags": [
          "CamundaDecisionDefinition"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DecisionDefinitionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DecisionDefinitionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DecisionDefinitionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/decision-definition/{key}/xml": {
      "get": {
        "tags": [
          "CamundaDecisionDefinition"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "CamundaDecisionDefinition"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDmnXmlRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDmnXmlRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDmnXmlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camunda/decision-instance": {
      "get": {
        "tags": [
          "CamundaDecisionInstance"
        ],
        "parameters": [
          {
            "name": "decisionKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DecisionInstanceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DecisionInstanceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DecisionInstanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/deployment": {
      "get": {
        "tags": [
          "CamundaDeployment"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeploymentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/group": {
      "get": {
        "tags": [
          "CamundaGroup"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/group/{id}": {
      "get": {
        "tags": [
          "CamundaGroup"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/history/task": {
      "get": {
        "tags": [
          "CamundaHistoricTaskInstance"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoricTaskInstanceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoricTaskInstanceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoricTaskInstanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/incident": {
      "get": {
        "tags": [
          "CamundaIncident"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncidentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncidentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncidentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/incident/{id}": {
      "get": {
        "tags": [
          "CamundaIncident"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/job": {
      "get": {
        "tags": [
          "CamundaJob"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/job/{id}": {
      "get": {
        "tags": [
          "CamundaJob"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JobDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/message": {
      "post": {
        "tags": [
          "CamundaMessage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorrelateMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CorrelateMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CorrelateMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCorrelationResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCorrelationResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageCorrelationResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/process-definition": {
      "get": {
        "tags": [
          "CamundaProcessDefinition"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDefinitionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDefinitionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDefinitionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/process-definition/{id}": {
      "get": {
        "tags": [
          "CamundaProcessDefinition"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinitionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinitionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinitionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/process-definition/{id}/xml": {
      "get": {
        "tags": [
          "CamundaProcessDefinition"
        ],
        "summary": "Returns the BPMN XML for a process definition (bpmn-js compatible).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "CamundaProcessDefinition"
        ],
        "summary": "Updates the BPMN XML for a process definition (bpmn-js save).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateXmlRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateXmlRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateXmlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camunda/process-instance": {
      "get": {
        "tags": [
          "CamundaProcessInstance"
        ],
        "parameters": [
          {
            "name": "processDefinitionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessInstanceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessInstanceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessInstanceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/process-instance/{id}": {
      "get": {
        "tags": [
          "CamundaProcessInstance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstanceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstanceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstanceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/signal": {
      "post": {
        "tags": [
          "CamundaSignal"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastSignalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastSignalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastSignalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camunda/task": {
      "get": {
        "tags": [
          "CamundaTask"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "assignee",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/task/{id}": {
      "get": {
        "tags": [
          "CamundaTask"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/task/{id}/form-schema": {
      "get": {
        "tags": [
          "CamundaTask"
        ],
        "summary": "Returns the form schema for a user task (form-js compatible).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "CamundaTask"
        ],
        "summary": "Updates the form schema for a user task (form-js save).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormSchemaRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormSchemaRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFormSchemaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/camunda/user": {
      "get": {
        "tags": [
          "CamundaUser"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/user/{id}": {
      "get": {
        "tags": [
          "CamundaUser"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/camunda/variable/{processInstanceId}": {
      "get": {
        "tags": [
          "CamundaVariable"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/VariableValueDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/VariableValueDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/VariableValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Debug/trace": {
      "post": {
        "tags": [
          "Debug"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TraceRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TraceRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TraceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Decision/deploy": {
      "post": {
        "tags": [
          "Decision"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeployRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Decision/by-key": {
      "get": {
        "tags": [
          "Decision"
        ],
        "parameters": [
          {
            "name": "decisionKey",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DecisionDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecisionDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecisionDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/api/Decision/evaluate": {
      "post": {
        "tags": [
          "Decision"
        ],
        "summary": "Evaluates a DMN decision by key with input variables.",
        "description": "Example request:\r\n            \r\n    POST /api/decision/evaluate\r\n    {\r\n        \"DecisionKey\": \"my-decision\",\r\n        \"Inputs\": { \"input1\": \"value\" }\r\n    }",
        "requestBody": {
          "description": "Evaluation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DecisionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecisionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecisionResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/History/by-process-instance/{processInstanceId}": {
      "get": {
        "tags": [
          "History"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoryEvent"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoryEvent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HistoryEvent"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/History/{id}": {
      "get": {
        "tags": [
          "History"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryEvent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryEvent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryEvent"
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/list-tenants": {
      "get": {
        "tags": [
          "Identity"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Identity/validate-user": {
      "get": {
        "tags": [
          "Identity"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/Management/suspend-process-instance/{id}": {
      "post": {
        "tags": [
          "Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Management/resume-process-instance/{id}": {
      "post": {
        "tags": [
          "Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Management/delete-process-instance/{id}": {
      "post": {
        "tags": [
          "Management"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Management/metrics": {
      "get": {
        "tags": [
          "Management"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        }
      }
    },
    "/api/Repository": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDefinition"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Repository"
        ],
        "summary": "Deploys a new BPMN process definition.",
        "description": "Example request:\r\n            \r\n    POST /api/repository\r\n    {\r\n        \"bpmnXml\": \"<definitions ...>...</definitions>\",\r\n        \"name\": \"hello-world.bpmn\",\r\n        \"tenantId\": null\r\n    }",
        "requestBody": {
          "description": "Deployment request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryDeployRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryDeployRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryDeployRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/api/Repository/{id}": {
      "get": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinition"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessDefinition"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Repository"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Runtime/start": {
      "post": {
        "tags": [
          "Runtime"
        ],
        "summary": "Starts a new process instance by process definition key.",
        "description": "Example request:\r\n            \r\n    POST /api/runtime/start\r\n    {\r\n        \"ProcessDefinitionKey\": \"Process_HelloWorld\",\r\n        \"Variables\": { \"foo\": 42 },\r\n        \"BusinessKey\": null,\r\n        \"TenantId\": null\r\n    }",
        "requestBody": {
          "description": "Start request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StartRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstance"
                }
              }
            }
          }
        }
      }
    },
    "/api/Runtime/{id}": {
      "get": {
        "tags": [
          "Runtime"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInstance"
                }
              }
            }
          }
        }
      }
    },
    "/api/Runtime": {
      "get": {
        "tags": [
          "Runtime"
        ],
        "parameters": [
          {
            "name": "processDefinitionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tenantId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessInstance"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessInstance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProcessInstance"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "processInstanceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "assignee",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/api/Task/{id}/claim": {
      "post": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Task/{id}/complete": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Completes a user task with optional variables.",
        "description": "Example request:\r\n            \r\n    POST /api/task/{id}/complete\r\n    {\r\n        \"Variables\": { \"approved\": true }\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Completion request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/Task/{id}/delegate": {
      "post": {
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DelegateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DelegateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorizationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BroadcastSignalRequest": {
        "type": "object",
        "properties": {
          "signalName": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompleteRequest": {
        "type": "object",
        "properties": {
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CorrelateMessageRequest": {
        "type": "object",
        "properties": {
          "messageName": {
            "type": "string",
            "nullable": true
          },
          "processInstanceId": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecisionDefinition": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dmnXml": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecisionDefinitionDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecisionInstanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "decisionKey": {
            "type": "string",
            "nullable": true
          },
          "result": {
            "nullable": true
          },
          "evaluatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecisionResult": {
        "type": "object",
        "properties": {
          "outputs": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DelegateRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeployRequest": {
        "type": "object",
        "properties": {
          "decisionKey": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "dmnXml": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeploymentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deploymentTime": {
            "type": "string",
            "format": "date-time"
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EvaluateRequest": {
        "type": "object",
        "properties": {
          "decisionKey": {
            "type": "string",
            "nullable": true
          },
          "inputs": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HistoricTaskInstanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "taskDefinitionKey": {
            "type": "string",
            "nullable": true
          },
          "processInstanceId": {
            "type": "string",
            "nullable": true
          },
          "processDefinitionId": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleteReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HistoryEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "processInstanceId": {
            "type": "string",
            "format": "uuid"
          },
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncidentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "processDefinitionId": {
            "type": "string",
            "nullable": true
          },
          "processInstanceId": {
            "type": "string",
            "nullable": true
          },
          "executionId": {
            "type": "string",
            "nullable": true
          },
          "incidentType": {
            "type": "string",
            "nullable": true
          },
          "activityId": {
            "type": "string",
            "nullable": true
          },
          "causeIncidentId": {
            "type": "string",
            "nullable": true
          },
          "rootCauseIncidentId": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "incidentTimestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "processInstanceId": {
            "type": "string",
            "nullable": true
          },
          "executionId": {
            "type": "string",
            "nullable": true
          },
          "processDefinitionId": {
            "type": "string",
            "nullable": true
          },
          "jobType": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "retries": {
            "type": "integer",
            "format": "int32"
          },
          "exceptionMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageCorrelationResultDto": {
        "type": "object",
        "properties": {
          "resultType": {
            "type": "string",
            "nullable": true
          },
          "executionId": {
            "type": "string",
            "nullable": true
          },
          "processInstanceId": {
            "type": "string",
            "nullable": true
          },
          "processDefinitionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PredictDurationRequest": {
        "type": "object",
        "properties": {
          "traceLengths": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PredictionResult": {
        "type": "object",
        "properties": {
          "mean": {
            "type": "number",
            "format": "double"
          },
          "stdDev": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProcessDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "bpmnXml": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProcessDefinitionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "resource": {
            "type": "string",
            "nullable": true
          },
          "deploymentId": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "suspended": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProcessInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "processDefinitionId": {
            "type": "string",
            "format": "uuid"
          },
          "businessKey": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessInstanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "businessKey": {
            "type": "string",
            "nullable": true
          },
          "processDefinitionId": {
            "type": "string",
            "nullable": true
          },
          "processDefinitionKey": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RepositoryDeployRequest": {
        "type": "object",
        "properties": {
          "bpmnXml": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StartRequest": {
        "type": "object",
        "properties": {
          "processDefinitionKey": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "businessKey": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "processInstanceId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "formKey": {
            "type": "string",
            "nullable": true
          },
          "formSchema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "taskDefinitionKey": {
            "type": "string",
            "nullable": true
          },
          "processInstanceId": {
            "type": "string",
            "nullable": true
          },
          "processDefinitionId": {
            "type": "string",
            "nullable": true
          },
          "executionId": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "due": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "followUp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "formKey": {
            "type": "string",
            "nullable": true
          },
          "formSchema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TenantInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TraceRequest": {
        "type": "object",
        "properties": {
          "bpmnXml": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDmnXmlRequest": {
        "type": "object",
        "properties": {
          "dmnXml": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFormSchemaRequest": {
        "type": "object",
        "properties": {
          "formKey": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateXmlRequest": {
        "type": "object",
        "properties": {
          "bpmnXml": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VariableValueDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          },
          "valueInfo": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}